<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Plot on </title>
    <link>/tags/plot/</link>
    <description>Recent content in Plot on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 Nov 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/plot/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Stereograms of the 1KGP PCA/tSNE</title>
      <link>/2019/11/19/stereograms-1kgp-pca-tsne/</link>
      <pubDate>Tue, 19 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/11/19/stereograms-1kgp-pca-tsne/</guid>
      <description>What is stereoscopy? How to look at a stereogram?  Technique for creating or enhancing the illusion of depth in an image by means of stereopsis for binocular vision.
 –Stereoscopy (Wikipedia)
Although some binocular-like devices can be used to merge two images and create the illusion of depth, there are also “freeviewing” techniques that don’t require any particular material. The two main techniques are to either look straight through the image or to cross your eyes.</description>
    </item>
    
    <item>
      <title>Tweet network from Genome Informatics 2019</title>
      <link>/2019/11/10/gi2019-tweetnetwork/</link>
      <pubDate>Sun, 10 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/11/10/gi2019-tweetnetwork/</guid>
      <description>I want to have a quick look at the tweets from the Genome Informatics meeting:
 to learn how to use the rtweet and ggraph R packages. to create a visual representation (as nice as possible) of our open community, with attendants sharing with each other. to highlight the high-volume accounts and their value even for someone attending the conference. to see if there are sub-groups of researchers among the attendants.</description>
    </item>
    
    <item>
      <title>Artistic representation of DNA tests&#39; results</title>
      <link>/2018/12/08/dna-art/</link>
      <pubDate>Sat, 08 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/12/08/dna-art/</guid>
      <description>Version 1: Tree Version 2: Weave Version 3: Noise Version 4: Stars Gallery Code Notes   Christmas is coming. DNA tests are cool gifts but I’ve already offered it to some members of my family before. Now I was wondering if I could use this data in a more creative way and produce some kind of artistic representation of the DNA data to give them for Christmas. Some kind of DNA art or painting that would be unique.</description>
    </item>
    
    <item>
      <title>MUMmerplots with ggplot2</title>
      <link>/2017/09/19/mummerplots-with-ggplot2/</link>
      <pubDate>Tue, 19 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/09/19/mummerplots-with-ggplot2/</guid>
      <description>Update Oct 28 2018: added reference id (rid) to be able to visualize multiple reference regions. Also uploaded the example data somewhere.
library(dplyr) library(magrittr) library(GenomicRanges) library(knitr) library(ggplot2) library(tidyr) MUMmer plot The MUMmer plot that I want to reproduce showed three contigs overlapping a region of chr 14. I had filtered the delta file with delta-filter -l 10000 -q -r to get only the contigs with the best alignments. I had used mummerplot with the -l layout option to reorder and orient the sequences to have a nice diagonal.</description>
    </item>
    
    <item>
      <title>Word Cloud in R</title>
      <link>/2016/02/26/word-cloud-in-r/</link>
      <pubDate>Fri, 26 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/02/26/word-cloud-in-r/</guid>
      <description>The wordcloud package is available on CRAN.
Fake words I create fake words to see a bit how the command is working.
library(wordcloud) createWords &amp;lt;- function(w.l = 3) paste(sample(letters, w.l, TRUE), collapse = &amp;quot;&amp;quot;) words = sapply(1:200, function(e) createWords(runif(1, 3, 10))) freq = c(sample(1:30, 190, T), sample(30:150, 10, T)) freq = freq/sum(freq) wordcloud(words, freq) ## Big words in the center wordcloud(words, freq, random.order = FALSE) ## Max word number wordcloud(words, freq, max.</description>
    </item>
    
  </channel>
</rss>